* dall-e-shell

An Emacs shell for OpenAI's DALL-E

* Install

#+begin_src emacs-lisp :lexical no
  (use-package dall-e-shell
    :ensure t
    :custom
    ((dall-e-shell-openai-key
      (lambda ()
        (auth-source-pass-get 'secret "openai-key")))))
#+end_src

* Launch

Launch with =M-x dall-e-shell=.

Note: =M-x =dall-e-shell= keeps a single shell around, refocusing if needed. To launch multiple shells, use =C-u M-x dall-e-shell=.

* Clear buffer

Type =clear= as a prompt.

#+begin_src sh
  DALL-E(v3)>  clear
#+end_src

Alternatively, use either =M-x dall-e-shell-clear-buffer= or =M-x comint-clear-buffer=.

* Customizations
#+BEGIN_SRC emacs-lisp :results table :colnames '("Custom variable" "Description") :exports results
  (let ((rows))
    (mapatoms
     (lambda (symbol)
       (when (and (string-match "^dall-e-shell"
                                (symbol-name symbol))
                  (custom-variable-p symbol))
         (push `(,symbol
                 ,(car
                   (split-string
                    (or (get (indirect-variable symbol)
                             'variable-documentation)
                        (get symbol 'variable-documentation)
                        "")
                    "\n")))
               rows))))
    rows)
#+END_SRC

#+RESULTS:
| Custom variable                      | Description                                                                 |
|--------------------------------------+-----------------------------------------------------------------------------|
| dall-e-shell-welcome-function        | Function returning welcome message or nil for no message.                   |
| dall-e-shell-openai-key              | OpenAI key as a string or a function that loads and returns it.             |
| dall-e-shell-image-size              | The default size of the requested image as a string.                        |
| dall-e-shell-read-string-function    | Function to read strings from user.                                         |
| dall-e-shell-request-timeout         | How long to wait for a request to time out.                                 |
| dall-e-shell-model-version           | The used DALL-E OpenAI model.  For Dall-E 3, use "dall-e-3".                |
| dall-e-shell-display-function        | Function to display the shell.  Set to `display-buffer' or custom function. |
| dall-e-shell-model-versions          | The list of Dall-E OpenAI models to swap from.                              |
| dall-e-shell-additional-curl-options | Additional options for `curl' command.                                      |
| dall-e-shell-image-output-directory  | Output directory for the generated image.                                   |
| dall-e-shell-image-quality           | Image quality: `standard' or `hd' (DALL-E 3 only feature).                  |

* Commands
#+BEGIN_SRC emacs-lisp :results table :colnames '("Command" "Description") :exports results
    (let ((rows))
      (mapatoms
       (lambda (symbol)
         (when (and (string-match "^dall-e-shell"
                                  (symbol-name symbol))
                    (commandp symbol))
           (push `(,(string-join
                     (seq-filter
                      (lambda (symbol)
                        (not (string-match "menu" symbol)))
                      (mapcar
                       (lambda (keys)
                         (key-description keys))
                       (or
                        (where-is-internal
                         (symbol-function symbol)
                         comint-mode-map
                         nil nil (command-remapping 'comint-next-input))
                        (where-is-internal
                         symbol dall-e-shell-mode-map nil nil (command-remapping symbol))
                        (where-is-internal
                         (symbol-function symbol)
                         dall-e-shell-mode-map nil nil (command-remapping symbol)))))  " or ")
                   ,(symbol-name symbol)
                   ,(car
                     (split-string
                      (or (documentation symbol t) "")
                      "\n")))
                 rows))))
      rows)
#+END_SRC

#+RESULTS:
| C-<up> or M-p   | dall-e-shell-previous-input                       | Cycle backwards through input history, saving input.              |
|                 | dall-e-shell                                      | Start a DALL-E shell.                                             |
|                 | dall-e-shell-insert-image-from-region-description | Generate and insert an image using current region as description. |
|                 | dall-e-shell-interrupt                            | Interrupt `dall-e-shell' from any buffer.                         |
| S-<return>      | dall-e-shell-newline                              | Insert a newline, and move to left margin of the new line.        |
| RET             | dall-e-shell-submit                               | Submit current input.                                             |
| C-x C-s         | dall-e-shell-save-session-transcript              | Save shell transcript to file.                                    |
| C-c C-v         | dall-e-shell-swap-model-version                   | Swap model version from `dall-e-shell-model-versions'.            |
|                 | dall-e-shell-mode                                 | Major mode for DALL-E shell.                                      |
| C-<down> or M-n | dall-e-shell-next-input                           | Cycle forwards through input history.                             |
| M-r             | dall-e-shell-search-history                       | Search previous input history.                                    |
|                 | dall-e-shell-rename-buffer                        | Rename current shell buffer.                                      |
* Support my work

ðŸ‘‰ Find my work useful? [[https://github.com/sponsors/xenodium][Support this work via GitHub Sponsors]] or [[https://apps.apple.com/us/developer/xenodium-ltd/id304568690][buy my iOS apps]].
